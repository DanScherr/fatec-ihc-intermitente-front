{"version":3,"file":"static/js/831.e0c0c4fe.chunk.js","mappings":"oYAOMA,GAASC,EAAAA,EAAAA,KAEA,SAASC,EAAcC,GAClC,IAAAC,GAAkCC,EAAAA,EAAAA,UAASC,GAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3CK,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwCN,EAAAA,EAAAA,UAAS,CAACO,KAAM,GAAIC,MAAO,KAAIC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAAhEI,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAIpCG,GAAwBZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsChB,EAAAA,EAAAA,UAAS,MAAKiB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8CpB,EAAAA,EAAAA,WAAS,GAAMqB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GACpCG,EAAmBC,OAAOC,SAASC,KAAKC,MAAM,KAAK,IAEzDC,EAAAA,EAAAA,YAAU,WAEFN,EADqB,iBAArBC,EAIR,GAAG,IA0CH,OAJAK,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,aAAc3B,EAC9B,GAAG,CAACA,KAGA4B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,GAAI,CACNC,OAAQ,IAAKC,QAAS,QACtBC,aAAc,EAAGC,gBAAiB,wBACpCC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,UACZP,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CACDR,GAAI,CACAS,MAAO,OAEPC,SAAU,WACVC,SAAU,OACVC,UAAW,IACX,OAAQ,CAAEC,QAAS,GACnBC,GAAI,QAERC,WAAWT,EAAAA,EAAAA,KAAA,SAAOD,SAAA,EAEjBP,EAAAA,EAAAA,MAACkB,EAAAA,EAAa,CAAChB,GAAI,CAACI,gBAAiB,QAASa,MAAO,aAAaZ,SAAA,yBAG/DjB,IACAkB,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAAClB,GAAI,CAACE,QAAS,IAAKiB,QAAS,kBAAMtC,GAAQ,EAAK,EAACwB,UACpDC,EAAAA,EAAAA,KAACc,EAAAA,EAAa,UAItBd,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CAAAhB,UAELP,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAACC,UAAU,EAAMlB,SAAA,CAErBnC,EAAUsD,KAAI,SAACC,GACX,OACI3B,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAArB,SAAA,EACAC,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAAC3B,GAAI,CAACiB,MAAO,YAAaW,WAAY,KAAKvB,SAAEoB,EAAKpD,QAC7DyB,EAAAA,EAAAA,MAAC+B,EAAAA,EAAU,CACP,kBAAgB,iCAChBC,aAAa,cACbC,KAAK,sBACL/B,GAAI,CAACgC,cAAe,MAAOf,MAAO,aAClC3C,MAAOmD,EAAKnD,MACZ2D,SAAU,SAACC,GAAK,OAjF9B,SAACA,EAAOT,GAC9B,IAAIU,EAAYjE,EAAUsD,KAAI,SAACY,GAC3B,OAAIX,EAAKpD,OAAS+D,EAAE/D,KACT,CAACA,KAAM+D,EAAE/D,KAAMC,MAAO4D,EAAMG,OAAO/D,OAEnC,CAACD,KAAM+D,EAAE/D,KAAMC,MAAO8D,EAAE9D,MACvC,IAEAH,EAAagE,EACjB,CAwE6DG,CAAkBJ,EAAOT,EAAK,EAACpB,SAAA,EAEpDC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,QAAQkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,WACnFpC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,QAAQkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,cACnFpC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,OAAOkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,cAZhFjB,EAAKpD,KAgBvB,KAEJiC,EAAAA,EAAAA,KAAA,OAAKqC,GAAI,YAAaC,MAAO,CAAC3C,OAAQ,qBAQlDK,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CACFjE,KAAMA,EACNkE,QAAS,kBAAMjE,GAAQ,EAAM,EAC7B,kBAAgB,oBAChB,mBAAiB,0BAAyBwB,UAE1CP,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAC1B,GAAI4C,EAAMvC,SAAA,EACXC,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACgB,GAAG,oBAAoB1B,MAAO,QAAS8B,QAAQ,KAAKC,UAAU,KAAI3C,SAAC,yBAG/EP,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAArB,SAAA,EACAC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAYC,EAAAA,EAAAA,GAAA,CACT5E,MAAOU,EACPiD,SAAU,SAACC,EAAOiB,GACU,kBAAbA,EACTlE,EAAe,CACbZ,KAAM8E,IAECA,GAAYA,EAASC,WAE9BnE,EAAe,CACbZ,KAAM8E,EAASC,aAGjBnE,EAAekE,EAErB,EACAE,cAAe,SAACC,EAAS1F,GACrB,IAAM2F,EAAW9F,EAAO6F,EAAS1F,GAEzBwF,EAAexF,EAAfwF,WAEFI,EAAaF,EAAQG,MAAK,SAACC,GAAM,OAAKN,IAAeM,EAAOrF,IAAI,IAQtE,MAPmB,KAAf+E,GAAsBI,GACxBD,EAASI,KAAK,CACZP,WAAAA,EACA/E,KAAK,QAADuF,OAAUR,EAAU,OAIrBG,CACX,EACAM,eAAa,EACbC,aAAW,EACXC,mBAAiB,EACjBT,QAASvF,EACTiG,eAAgB,SAACN,GAEb,MAAsB,kBAAXA,EACFA,EAGLA,EAAON,WACFM,EAAON,WAGTM,EAAOrF,IAChB,EACA4F,aAAc,SAACC,EAAOR,GAAM,OAAKpD,EAAAA,EAAAA,KAAA,MAAA6D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAK,IAAA7D,SAAGqD,EAAOrF,OAAU,EAClE2B,GAAI,CAAES,MAAO,KACb2D,UAAQ,EACRC,YAAa,SAACzG,GAAM,OAClB0C,EAAAA,EAAAA,KAACgE,EAAAA,GAASH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKvG,GAAM,IAAE8E,MAAM,6BAA6B,GAC1D,KACA,CAAC5B,GAAI,MAEbhB,EAAAA,EAAAA,MAAC+B,EAAAA,EAAU,CACP,kBAAgB,iCAChBC,aAAa,cACbC,KAAK,sBACL/B,GAAI,CAACgC,cAAe,MAAOf,MAAO,aAElCgB,SAAU,SAACC,GAAK,OAhKX,SAACA,GAC1B,IAAMqC,EAAW,CAAClG,KAAiB,OAAXW,QAAW,IAAXA,OAAW,EAAXA,EAAaX,KAAMC,MAAO4D,EAAMG,OAAO/D,OAE/DsB,QAAQC,IAAI,cAAe0E,GAE3B9F,EAAgB8F,EACpB,CA0J6CC,CAAqBtC,EAAM,EAAC7B,SAAA,EAEjDC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,QAAQkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,WACnFpC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,QAAQkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,cACnFpC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACvC,GAAI,CAACE,QAAS,UAAW5B,MAAM,OAAOkE,SAASlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,IAAKC,MAAM,aAEtFpC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAAClB,GAAI,CAACE,QAAS,GAAIuE,GAAI,GAAItD,QAAS,kBA9JnC,WACxB,IAAIuD,GAAuB,EAEvBvC,EAAYjE,EAAUsD,KAAI,SAACY,GAC3B,OAAI5D,EAAaH,OAAS+D,EAAE/D,MACxBqG,GAAuB,EAChB,CAACrG,KAAMG,EAAaH,KAAMC,MAAOE,EAAaF,QAG9C,CAACD,KAAM+D,EAAE/D,KAAMC,MAAO8D,EAAE9D,MACvC,IACKoG,GACDvC,EAAUwB,KAAKnF,GAEnBL,EAAagE,EACjB,CA+IqEwC,EAAqB,EAACtE,SAAE,wBAQjG,CAEA,IAAMuC,EAAQ,CACVlC,SAAU,WACVkE,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXrE,MAAO,IACPsE,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAGHnH,EAAS,CACT,CACIM,KAAM,OACNC,MAAO,QAEX,CACID,KAAM,SACNC,MAAO,SAEX,CACID,KAAM,IACNC,MAAO,SAEX,CACID,KAAM,KACNC,MAAO,S,6IC5OA,SAAS6G,IACpB,OACIrF,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CACAsB,UAAU,OACVhD,GAAI,CACAU,SAAU,WACVkE,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXrE,MAAO,IACPR,OAAQ,IACR8E,QAAS,oBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GACH/E,aAAc,GACd,UAAW,CACPc,MAAO,cAGfmE,aAAa,MACbC,YAAU,EAAAhF,SAAA,EAEVC,EAAAA,EAAAA,KAACgF,EAAAA,EAAa,KACdhF,EAAAA,EAAAA,KAACiF,EAAAA,EAAY,KACbjF,EAAAA,EAAAA,KAAC3C,EAAAA,EAAa,MAG1B,CC9Be,SAAS6H,EAAqB5H,GACzC,OACI0C,EAAAA,EAAAA,KAACoB,EAAAA,EAAG,CACAsB,UAAU,OACVhD,GAAI,CACAU,SAAU,WACVkE,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXrE,MAAO,IACPR,OAAQ,IACR8E,QAAS,oBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GACH/E,aAAc,GACd,UAAW,CACPc,MAAO,cAGfmE,aAAa,MACbC,YAAU,EAAAhF,UAEVC,EAAAA,EAAAA,KAACgF,EAAAA,EAAa,KAG1B,C,wBCvBe,SAASG,EAAa7H,GACjC,IAAO8H,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnBF,KACPG,GAIIF,EAAAA,EAAAA,YAAWC,EAAAA,GAHXE,EAAYD,EAAZC,aAEAC,GADQF,EAARG,SACeH,EAAfE,iBAGJ,OACIjG,EAAAA,EAAAA,MAAAmG,EAAAA,SAAA,CAAA5F,SAAA,CAEiB,YAATqF,GACApF,EAAAA,EAAAA,KAACkF,EAAmB,KAEpBlF,EAAAA,EAAAA,KAAC6E,EAAuB,KAE5BrF,EAAAA,EAAAA,MAACoG,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAAUC,WAAY,SAAUC,UAAW,MACvEtG,GAAI,CACAU,SAAU,QACV6F,OAAe,YAAPb,EAAiB,IAAI,GAC7Bc,MAAO,GACTnG,SAAA,EAGFC,EAAAA,EAAAA,KAAC4F,EAAAA,GAAI,CAACzE,MAAI,EAACgF,GAAI,EAAEpG,UACbC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACC,QAAS2E,EAAc/C,QAAQ,YAAY/C,GAAI,CAACyE,GAAI,EAAGiC,GAAI,QAAQrG,SAAC,cAMhFC,EAAAA,EAAAA,KAAC4F,EAAAA,GAAI,CAACzE,MAAI,EAACgF,GAAI,EAAEpG,UACbC,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACC,QAAS4E,EACbhD,QAAQ,YACR/C,GAAI,CACAyE,GAAI,EACJrE,gBAAiB,iBACjBuG,YAAY,iBACZ,UAAW,CACPvG,gBAAiB,0BACjBuG,YAAa,QACb1F,MAAM,QACN2F,QAAQ,QAElBvG,SAAC,kBAOvB,C","sources":["pages/Configuracao/components/Qualificacoes.jsx","pages/Configuracao/components/Colaborador.jsx","pages/Configuracao/components/Empresa.jsx","pages/Configuracao/index.jsx"],"sourcesContent":["import { Box, Button, Card, CardContent, FormControl, FormControlLabel, List, ListItem, ListSubheader, Radio, RadioGroup, Typography } from \"@mui/material\";\nimport { React, useEffect, useState } from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Modal from '@mui/material/Modal';\n\nconst filter = createFilterOptions();\n\nexport default function Qualificacoes(params) {\n    const [selection, setSelection] = useState(qualif);\n    const [newSelection, setNewSelection] = useState({nome: '', value: ''});\n    // const updateSelection = (value) => {\n    //     setSelection(prev => ({...prev, value.index: }));\n    // };\n    const [open, setOpen] = useState(false);\n    const [valueSelect, setValueSelect] = useState(null);\n    const [qualiEhEditavel, setQualiEhEditavel] = useState(false);\n    const frontendEndpoint = window.location.href.split('/')[3];\n\n    useEffect(() => {\n        if (frontendEndpoint === 'configuracao')\n            setQualiEhEditavel(true);\n        else\n            setQualiEhEditavel(false);\n    }, [])\n\n    const handleRadioChange = (event, item) => {\n        let novoArray = selection.map((i) => {\n            if (item.nome === i.nome)\n                return {nome: i.nome, value: event.target.value};\n            else\n                return {nome: i.nome, value: i.value};\n        })\n\n        setSelection(novoArray);\n    };\n\n    const handleNewRadioChange = (event) => {\n        const novoItem = {nome: valueSelect?.nome, value: event.target.value};\n        \n        console.log('novo array:', novoItem);\n\n        setNewSelection(novoItem);\n    };\n\n    const handleAdcionarClick = () => {\n        let valueHasBeenModified = false;\n\n        let novoArray = selection.map((i) => {\n            if (newSelection.nome === i.nome) {\n                valueHasBeenModified = true;\n                return {nome: newSelection.nome, value: newSelection.value};\n            }\n            else\n                return {nome: i.nome, value: i.value};\n        });\n        if (!valueHasBeenModified)\n            novoArray.push(newSelection);\n\n        setSelection(novoArray);\n    }\n\n    useEffect(() => {\n        console.log('Selection:', selection)\n    }, [selection])\n\n    return (\n        <Card sx={{\n            height: 150, display: 'block', \n            borderRadius: 5, backgroundColor: 'primary.lightestMain',\n        }}>\n            <CardContent>\n            <List\n                sx={{\n                    width: '100%',\n                    // maxWidth: 360,\n                    position: 'relative',\n                    overflow: 'auto',\n                    maxHeight: 120,\n                    '& ul': { padding: 0 },\n                    my: 'auto',\n                }}\n                subheader={<li />}\n            >  \n                 <ListSubheader sx={{backgroundColor: 'white', color: 'font.main'}}>{\n                    `Qualificações: `}\n                    {\n                    qualiEhEditavel &&\n                    <Button sx={{display: ''}} onClick={() => setOpen(true)}>\n                        <AddCircleIcon />\n                    </Button>\n                    }\n                 </ListSubheader>\n                <ListItem>\n                    {/* RADIO BUTTON */}\n                    <FormControl required={false}> \n                        {\n                            selection.map((item)=>{\n                                return (\n                                    <Box key={item.nome}>\n                                        <Typography sx={{color: 'font.main', fontWeight: 550}}>{item.nome}</Typography>\n                                        <RadioGroup\n                                            aria-labelledby=\"demo-radio-buttons-group-label\"\n                                            defaultValue=\"Colaborador\"\n                                            name=\"radio-buttons-group\"\n                                            sx={{flexDirection: 'row', color: 'font.main'}}\n                                            value={item.value}\n                                            onChange={(event) => handleRadioChange(event, item)}\n                                        >\n                                            <FormControlLabel sx={{display: 'inline'}} value='baixa' control={<Radio />} label=\"Baixa\" />\n                                            <FormControlLabel sx={{display: 'inline'}} value='media' control={<Radio />} label=\"Média\" />\n                                            <FormControlLabel sx={{display: 'inline'}} value='alta' control={<Radio />} label=\"Alta\" />\n                                        </RadioGroup>\n                                    </Box>                                    \n                                )\n                            })\n                        }\n                        <div id={'compVazio'} style={{height: '20px'}} />\n                    </FormControl>\n                    \n                </ListItem>\n                \n                        \n            </List>\n            </CardContent>\n            <Modal\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" color={'white'} variant=\"h6\" component=\"h2\">\n                        Qualificação:\n                    </Typography>\n                    <Box>\n                        <Autocomplete\n                            value={valueSelect}\n                            onChange={(event, newValue) => {\n                                if (typeof newValue === 'string') {\n                                  setValueSelect({\n                                    nome: newValue,\n                                  });\n                                } else if (newValue && newValue.inputValue) {\n                                  // Create a new value from the user input\n                                  setValueSelect({\n                                    nome: newValue.inputValue,\n                                  });\n                                } else {\n                                  setValueSelect(newValue);\n                                }\n                            }}\n                            filterOptions={(options, params) => {\n                                const filtered = filter(options, params);\n                        \n                                const { inputValue } = params;\n                                // Suggest the creation of a new value\n                                const isExisting = options.some((option) => inputValue === option.nome);\n                                if (inputValue !== '' && !isExisting) {\n                                  filtered.push({\n                                    inputValue,\n                                    nome: `Add \"${inputValue}\"`,\n                                  });\n                                }\n                        \n                                return filtered;\n                            }}\n                            selectOnFocus\n                            clearOnBlur\n                            handleHomeEndKeys\n                            options={qualif}\n                            getOptionLabel={(option) => {\n                                // Value selected with enter, right from the input\n                                if (typeof option === 'string') {\n                                  return option;\n                                }\n                                // Add \"xxx\" option created dynamically\n                                if (option.inputValue) {\n                                  return option.inputValue;\n                                }\n                                // Regular option\n                                return option.nome;\n                              }}\n                              renderOption={(props, option) => <li {...props}>{option.nome}</li>}\n                              sx={{ width: 300 }}\n                              freeSolo\n                              renderInput={(params) => (\n                                <TextField {...params} label=\"Free solo with text demo\" />\n                              )}\n                            sx={{my: 3}}\n                        />\n                        <RadioGroup\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\n                            defaultValue=\"Colaborador\"\n                            name=\"radio-buttons-group\"\n                            sx={{flexDirection: 'row', color: 'font.main'}}\n                            // value={item.value}\n                            onChange={(event) => handleNewRadioChange(event)}\n                        >\n                            <FormControlLabel sx={{display: 'inline'}} value='baixa' control={<Radio />} label=\"Baixa\" />\n                            <FormControlLabel sx={{display: 'inline'}} value='media' control={<Radio />} label=\"Média\" />\n                            <FormControlLabel sx={{display: 'inline'}} value='alta' control={<Radio />} label=\"Alta\" />\n                        </RadioGroup>\n                        <Button sx={{display: '', mt: 2}} onClick={() => handleAdcionarClick()} >\n                            Adicionar\n                        </Button>\n                    </Box>\n                </Box>\n            </Modal>\n        </Card>\n    )\n};\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nlet qualif = [\n    {\n        nome: 'Java',\n        value: 'alta',\n    },\n    {\n        nome: 'Python',\n        value: 'baixa',\n    },\n    {\n        nome: 'C',\n        value: 'baixa',\n    },\n    {\n        nome: 'C#',\n        value: 'media',\n    },\n];","import { Box } from \"@mui/material\";\nimport Coloaborador from \"../../Cadastro/components/Colaborador\";\nimport Compartilhado from \"../../Cadastro/components/Compartilhado\";\nimport Qualificacoes from \"./Qualificacoes\";\n\nexport default function ConfiguracaoColaborador( ) {\n    return (\n        <Box\n            component='form'\n            sx={{\n                position: 'absolute',\n                top: '49%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: 800,\n                height: 600,\n                bgcolor: 'background.navBar',\n                border: '2px solid #000',\n                boxShadow: 24,\n                p: 10,\n                borderRadius: 40,\n                '&:hover': {\n                    color: 'font.main',\n                }\n            }}\n            autoComplete=\"off\"\n            noValidate \n        >\n            <Compartilhado/>\n            <Coloaborador />\n            <Qualificacoes />\n        </Box>\n    )\n}","import { Box } from \"@mui/material\";\nimport Compartilhado from \"../../Cadastro/components/Compartilhado\";\n\nexport default function ConfiguracaoEmpresa (params) {\n    return (\n        <Box\n            component='form'\n            sx={{\n                position: 'absolute',\n                top: '49%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: 800,\n                height: 500,\n                bgcolor: 'background.navBar',\n                border: '2px solid #000',\n                boxShadow: 24,\n                p: 10,\n                borderRadius: 40,\n                '&:hover': {\n                    color: 'font.main',\n                }\n            }}\n            autoComplete=\"off\"\n            noValidate \n        >\n            <Compartilhado />\n        </Box>\n    )\n}","import { Button, Grid } from \"@mui/material\"\nimport ConfiguracaoColaborador from \"./components/Colaborador\"\nimport ConfiguracaoEmpresa from \"./components/Empresa\"\nimport { useContext } from \"react\"\nimport AuthContext from \"../../context/AuthContext\"\n\nexport default function Configuracao(params) {\n    const {tipo} = useContext(AuthContext);\n    const {\n        handleSubmit,\n        setOpcao,\n        handleClearForm\n    } = useContext(AuthContext);\n\n    return (\n        <>\n            {\n                tipo === 'empresa' ?\n                <ConfiguracaoEmpresa />\n                :\n                <ConfiguracaoColaborador />\n            }\n            <Grid container justifyContent={'center'} alignItems={'center'} direction={'row'}\n                sx={{\n                    position: 'fixed', \n                    bottom: tipo==='empresa'?200:90, \n                    right: 0\n                }}\n            >\n                {/* BOTAO SUBMIT */}\n                <Grid item xs={1}>\n                    <Button onClick={handleSubmit} variant=\"contained\" sx={{mt: 1, mx: 'auto'}}>\n                        Editar\n                    </Button>\n                </Grid>\n\n                {/* BOTAO VOLTAR */}\n                <Grid item xs={1}>\n                    <Button onClick={handleClearForm}\n                        variant=\"contained\" \n                        sx={{\n                            mt: 1, \n                            backgroundColor: 'secondary.main',\n                            borderColor: `secondary.main`, \n                            '&:hover': {\n                                backgroundColor: 'secondary.veryLightMain',\n                                borderColor: 'white',\n                                color: `white`,\n                                opacity: `75%`\n                            }\n                    }}>\n                        Limpar\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}"],"names":["filter","createFilterOptions","Qualificacoes","params","_useState","useState","qualif","_useState2","_slicedToArray","selection","setSelection","_useState3","nome","value","_useState4","newSelection","setNewSelection","_useState5","_useState6","open","setOpen","_useState7","_useState8","valueSelect","setValueSelect","_useState9","_useState10","qualiEhEditavel","setQualiEhEditavel","frontendEndpoint","window","location","href","split","useEffect","console","log","_jsxs","Card","sx","height","display","borderRadius","backgroundColor","children","_jsx","CardContent","List","width","position","overflow","maxHeight","padding","my","subheader","ListSubheader","color","Button","onClick","AddCircleIcon","ListItem","FormControl","required","map","item","Box","Typography","fontWeight","RadioGroup","defaultValue","name","flexDirection","onChange","event","novoArray","i","target","handleRadioChange","FormControlLabel","control","Radio","label","id","style","Modal","onClose","variant","component","Autocomplete","_defineProperty","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","concat","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","props","_objectSpread","freeSolo","renderInput","TextField","novoItem","handleNewRadioChange","mt","valueHasBeenModified","handleAdcionarClick","top","left","transform","bgcolor","border","boxShadow","p","ConfiguracaoColaborador","autoComplete","noValidate","Compartilhado","Coloaborador","ConfiguracaoEmpresa","Configuracao","tipo","useContext","AuthContext","_useContext2","handleSubmit","handleClearForm","setOpcao","_Fragment","Grid","container","justifyContent","alignItems","direction","bottom","right","xs","mx","borderColor","opacity"],"sourceRoot":""}